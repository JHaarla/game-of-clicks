{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/Wrapper/index.js","components/CharCard/index.js","components/Message/index.js","components/TheGame.js","index.js"],"names":["Header","props","className","message","score","highScore","Footer","id","Wrapper","children","CharCard","alt","name","src","imglink","onClick","clickCard","Message","TheGame","state","images","clickedArray","shuffleArray","shufArr","i","length","j","Math","floor","random","shuffledArray","setState","includes","concat","this","map","img","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mxCAYeA,G,MATA,SAAAC,GAAK,OAChB,yBAAKC,UAAU,UACX,yBAAKA,UAAU,SAAf,uBACA,yBAAKA,UAAU,QAAQD,EAAME,SAC7B,yBAAKD,UAAU,SAAf,UAA+BD,EAAMG,MAArC,oBAA6DH,EAAMI,cCD5DC,G,MAHA,kBAAM,yBAAKJ,UAAU,qBAAqBK,GAAG,UAAvC,6BCOAC,G,MAPL,SAAAP,GAAK,OAElB,yBAAKC,UAAU,WAAWD,EAAMQ,YCOpBC,G,MATE,SAAAT,GAAK,OAElB,yBAAKC,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,+BAA+BS,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,QAASC,QAAS,kBAAMd,EAAMe,UAAUf,EAAMM,W,OCGrHU,G,MAPC,SAAAhB,GAAK,OACjB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,QAAQD,EAAME,YC+EtBe,E,2MA1EXC,MAAQ,CACJC,SACAhB,MAAO,EACPC,UAAW,EACXgB,aAAc,GACdlB,QAAS,I,EAGbmB,aAAe,SAACC,GACZ,IAAK,IAAIC,EAAID,EAAQE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAEd,CAACD,EAAQG,GAAIH,EAAQC,IAA/CD,EAAQC,GAFgC,KAE5BD,EAAQG,GAFoB,KAI7C,OAAOH,G,EAGXP,UAAY,SAAAT,GACR,IAAMuB,EAAgB,EAAKR,aAAaF,GACxC,EAAKW,SAAS,CAAEX,OAAQU,IACpB,EAAKX,MAAME,aAAaW,SAASzB,GACjC,EAAKwB,SAAS,CAAE3B,MAAO,EAAGiB,aAAc,GAAIlB,QAAS,sEAGrD,EAAK4B,SAAS,CACVV,aAAc,EAAKF,MAAME,aAAaY,OAAO,CAAC1B,IAC9CH,MAAO,EAAKe,MAAMf,MAAQ,EAC1BD,QAAS,2BAIb,EAAKgB,MAAMf,MAAQ,EAAKe,MAAMd,WAC9B,EAAK0B,SAAS,CAAE1B,UAAW,EAAKc,MAAMf,S,wEAKpC,IAAD,OAEL,OACI,yBAAKG,GAAG,gBACJ,6BACI,kBAAC,EAAD,CACIH,MAAO8B,KAAKf,MAAMf,MAClBC,UAAW6B,KAAKf,MAAMd,YAE1B,kBAAC,EAAD,CACIF,QAAS+B,KAAKf,MAAMhB,UAGxB,kBAAC,EAAD,KAGK+B,KAAKf,MAAMC,OAAOe,KAAI,SAAAC,GAAG,OACtB,kBAAC,EAAD,CACI7B,GAAI6B,EAAI7B,GACR8B,IAAKD,EAAI7B,GACTO,QAASsB,EAAItB,QACbE,UAAW,EAAKA,iBAKhC,kBAAC,EAAD,W,GAhEMsB,aCHtBC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.e8f3e170.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nconst Header = props => (\r\n    <div className=\"header\">\r\n        <div className=\"title\">Clicky Game - React</div>\r\n        <div className=\"mesg\">{props.message}</div>\r\n        <div className=\"score\">Score: {props.score}  |  High Score: {props.highScore}</div> \r\n\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => <div className=\"footer text-center\" id=\"footer\">© 2019 Jarkko Haarla</div>\r\n\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./wrapper.css\";\r\n\r\nconst Wrapper = props => (\r\n\r\n   <div className=\"wrapper\">{props.children}</ div>\r\n\r\n      )\r\n      \r\n      \r\n      export default Wrapper;\r\n","import React from \"react\";\r\nimport \"./CharCard.css\";\r\n\r\nconst CharCard = props => (\r\n\r\n    <div className=\"card\">\r\n        <div className=\"img-container\">\r\n            <img className=\"img-thumbnail img-responsive\" alt={props.name} src={props.imglink} onClick={() => props.clickCard(props.id)}/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CharCard;\r\n","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst Message = props => (\r\n    <div className=\"message\">\r\n        <div className=\"mesg\">{props.message}</div>\r\n\r\n    </div>\r\n);\r\n\r\nexport default Message;","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport CharCard from \"./CharCard\";\r\nimport images from \"../futurama.json\";\r\nimport Message from \"./Message\";\r\n\r\nclass TheGame extends Component {\r\n\r\n    state = {\r\n        images,\r\n        score: 0,\r\n        highScore: 0,\r\n        clickedArray: [],\r\n        message: \"\"\r\n    };\r\n\r\n    shuffleArray = (shufArr) => {\r\n        for (let i = shufArr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [shufArr[i], shufArr[j]] = [shufArr[j], shufArr[i]];\r\n        }\r\n        return shufArr;\r\n    };\r\n\r\n    clickCard = id => {\r\n        const shuffledArray = this.shuffleArray(images);\r\n        this.setState({ images: shuffledArray });\r\n        if (this.state.clickedArray.includes(id)) {\r\n            this.setState({ score: 0, clickedArray: [], message: \"Incorrect!! Game Over ☹️ Click an image to start again!\" });\r\n        }\r\n        else {\r\n            this.setState({\r\n                clickedArray: this.state.clickedArray.concat([id]),\r\n                score: this.state.score + 1,\r\n                message: \"Correct!! 🙂\"\r\n            });\r\n        }\r\n        // set highScore = score if score>highScore.\r\n        if (this.state.score > this.state.highScore) {\r\n            this.setState({ highScore: this.state.score });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"content-wrap\">\r\n                <div>\r\n                    <Header\r\n                        score={this.state.score}\r\n                        highScore={this.state.highScore}\r\n                    />\r\n                    <Message\r\n                        message={this.state.message}\r\n\r\n                    />\r\n                    <Wrapper>\r\n\r\n\r\n                        {this.state.images.map(img => (\r\n                            <CharCard\r\n                                id={img.id}\r\n                                key={img.id}\r\n                                imglink={img.imglink}\r\n                                clickCard={this.clickCard}\r\n                            />\r\n                        ))}\r\n                    </Wrapper>\r\n                </div>\r\n                <Footer />\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default TheGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TheGame from './components/TheGame';\n\nReactDOM.render(<TheGame />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}